.sn-component
  #footer-bar.sk-app-bar.no-edges.no-bottom-edge
    .left
      .sk-app-bar-item(
        click-outside='self.clickOutsideAccountMenu()',
        is-open='self.state.showAccountMenu',
        ng-click='self.accountMenuPressed()'
        )
        .sk-app-bar-item-column
          .sk-circle.small(
            ng-class="self.state.error ? 'danger' : (self.getUser() ? 'info' : 'neutral')"
            )
        .sk-app-bar-item-column
          .sk-label.title(ng-class='{red: self.state.error}') Account
        account-menu(
          close-function='self.closeAccountMenu',
          ng-click='$event.stopPropagation()',
          ng-if='self.state.showAccountMenu',
          )
      .sk-app-bar-item
        a.no-decoration.sk-label.title(
          href='https://standardnotes.org/help',
          rel='noopener',
          target='_blank'
          )
          | Help
      .sk-app-bar-item.border
      .sk-app-bar-item(ng-repeat='room in self.state.rooms track by room.uuid')
        .sk-app-bar-item-column(ng-click='self.selectRoom(room)')
          .sk-label {{room.name}}
        component-modal(
          component='room',
          ng-if='room.showRoom',
          on-dismiss='self.onRoomDismiss'
          )
    .center
      .sk-app-bar-item(ng-show='self.state.arbitraryStatusMessage')
        .sk-app-bar-item-column
          span.neutral.sk-label {{self.state.arbitraryStatusMessage}}
    .right
      .sk-app-bar-item(
        ng-click='self.openSecurityUpdate()',
        ng-show='self.state.securityUpdateAvailable'
        )
        span.success.sk-label Security update available.
      .sk-app-bar-item(
        ng-click='self.clickedNewUpdateAnnouncement()',
        ng-show='self.state.newUpdateAvailable == true'
        )
        span.info.sk-label New update available.
      .sk-app-bar-item.no-pointer(
        ng-if='self.state.lastSyncDate && !self.state.isRefreshing'
        )
        .sk-label.subtle
          | Last refreshed {{self.state.lastSyncDate}}
      .sk-app-bar-item(
        ng-click='self.toggleSyncResolutionMenu()',
        ng-if='(self.state.outOfSync && !self.state.isRefreshing) || self.state.showSyncResolution'
        )
        .sk-label.warning(ng-if='self.state.outOfSync') Potentially Out of Sync
        sync-resolution-menu(
          close-function='self.toggleSyncResolutionMenu',
          ng-click='$event.stopPropagation();',
          ng-if='self.state.showSyncResolution'
          )
      .sk-app-bar-item(ng-if='self.state.lastSyncDate && self.state.isRefreshing')
        .sk-spinner.small
      .sk-app-bar-item(ng-if='self.state.offline')
        .sk-label Offline
      .sk-app-bar-item(ng-click='self.refreshData()', ng-if='!self.state.offline')
        .sk-label Refresh
      .sk-app-bar-item.border(ng-if='self.state.dockShortcuts.length > 0')
      .sk-app-bar-item.dock-shortcut(ng-repeat='shortcut in self.state.dockShortcuts')
        .sk-app-bar-item-column(
          ng-class="{'underline': shortcut.component.active}",
          ng-click='self.selectShortcut(shortcut)'
          )
          .div(ng-if="shortcut.icon.type == 'circle'", title='{{shortcut.name}}')
            .sk-circle.small(
              ng-style="{'background-color': shortcut.icon.background_color, 'border-color': shortcut.icon.border_color}"
              )
          .div(ng-if="shortcut.icon.type == 'svg'", title='{{shortcut.name}}')
            .svg-item(
              elem-ready='self.initSvgForShortcut(shortcut)',
              ng-attr-id='dock-svg-{{shortcut.component.uuid}}'
              )
      .sk-app-bar-item.border(ng-if='self.hasPasscode()')
      #lock-item.sk-app-bar-item(
        ng-click='self.lockApp()',
        ng-if='self.hasPasscode()',
        title='Locks application and wipes unencrypted data from memory.'
        )
        .sk-label
          i#footer-lock-icon.icon.ion-locked
